apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.services.masterdata.serviceName }} 
  namespace: {{ .Release.Namespace }} 
  labels:
    app: {{ .Values.services.masterdata.serviceName }}
    component: {{ .Values.component }} 
    
spec:
  replicas: {{ .Values.services.masterdata.podconfig.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.services.masterdata.serviceName }} 
  minReadySeconds: {{ .Values.services.masterdata.podconfig.minReadySeconds }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.services.masterdata.podconfig.maxUnavailable }}
      maxSurge: {{ .Values.services.masterdata.podconfig.maxSurge }}
  template:
    metadata:
      labels:
        app: {{ .Values.services.masterdata.serviceName }} 
        component: {{ .Values.component }} 
        exportLogs: {{ .Values.exportLogs }}
    spec:
      {{- include "dockerHubSecret" .  | indent 6}}
      containers:
      - name: {{ .Values.services.masterdata.serviceName }} 
        image: {{ .Values.services.masterdata.dockerImage }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: active_profile_env
          value: {{ .Values.activeProfileEnv }} 
        - name: spring_config_label_env
          value: {{ .Values.springConfigLabel }} 
        - name: spring_config_url_env
          value: {{ .Values.configServerUrl }} 
        - name: artifactory_url_env
          value: {{ .Values.artifactoryUrl }} 
        - name: is_glowroot_env
          value: {{ .Values.isGlowroot }} 
        - name: iam_adapter_url_env
          value: {{ .Values.iamAdapterUrl }}
        ports:
        - containerPort: {{ .Values.services.masterdata.containerPort }}
        readinessProbe:
          httpGet:
            path: {{ .Values.services.masterdata.healthUrl }} 
            port: {{ .Values.services.masterdata.containerPort }} 
          initialDelaySeconds: {{ .Values.probe.initialDelay }} 
          periodSeconds: {{ .Values.probe.period }} 
 #       livenessProbe:
 #         httpGet:
 #           path: {{ .Values.services.masterdata.healthUrl }} 
 #           port: {{ .Values.services.masterdata.containerPort }} 
 #         initialDelaySeconds: {{ .Values.probe.initialDelay }} 
 #         periodSeconds: {{ .Values.probe.period }}
